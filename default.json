{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    ":dependencyDashboard",
    ":label(renovate)",
    ":semanticCommits",
    ":semanticCommitTypeAll(chore)",
    ":disableRateLimiting",
    ":reviewer(wittdennis)",
    ":separateMajorReleases",
    ":separatePatchReleases",
    ":enablePreCommit"
  ],
  "addLabels": ["manager:{{{manager}}}", "updateType:{{{updateType}}}"],
  "lockFileMaintenance": {
    "enabled": true
  },
  "customManagers": [
    {
      "customType": "regex",
      "description": "Update _VERSION variables in Dockerfiles",
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile\\.[^/]*$",
        "(^|/|\\.)Containerfile$",
        "(^|/)Containerfile\\.[^/]*$"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>[a-z-]+?)(?: depName=(?<depName>.+?))? packageName=(?<packageName>.+?)(?: versioning=(?<versioning>[a-z-]+?))?\\s(?:ENV|ARG) .+?_VERSION=(?<currentValue>.+?)\\s"
      ]
    },
    {
      "customType": "regex",
      "description": "Update docker images in yaml manifests",
      "fileMatch": ["^.*\\.ya?ml$"],
      "matchStrings": [
        "[\"']{0,1}(?<depName>\\S+):(?<currentValue>\\S+)[\"']{0,1}\\s+#\\s+(renovate: +)?versioning=(?<versioning>\\S+)",
        "[\"']{0,1}(?<depName>\\S+):(?<currentValue>\\S+)[\"']{0,1}\\s+#\\s+renovate"
      ],
      "datasourceTemplate": "docker",
      "versioningTemplate": "docker"
    },
    {
      "customType": "regex",
      "description": "Universal renovate instruction comment",
      "fileMatch": ["^.*$"],
      "matchStrings": [
        "[\"']{0,1}(?<currentValue>[^\\s\"']*)[\"']{0,1}\\s+#\\s+(renovate:\\s+)?datasource=[\"']{0,1}(?<datasource>[^\\s\"']+)[\"']{0,1}\\s+depName=[\"']{0,1}(?<depName>[^\\s\"']+)[\"']{0,1}(\\s+currentDigest=[\"']{0,1}(?<currentDigest>[^\\s\"']+)[\"']{0,1})?(\\s+depType=[\"']{0,1}(?<depType>[^\\s\"']+)[\"']{0,1})?(\\s+extractVersion=[\"']{0,1}(?<extractVersion>[^\\s\"']+)[\"']{0,1})?(\\s+indentation=[\"']{1}(?<indentation>[\\s\"']+)[\"']{1})?(\\s+packageName=[\"']{0,1}(?<packageName>[^\\s\"']+)[\"']{0,1})?(\\s+registryUrl=[\"']{0,1}(?<registryUrl>[^\\s\"']+)[\"']{0,1})?(\\s+versioning=[\"']{0,1}(?<versioning>[^\\s\"']+)[\"']{0,1})?"
      ]
    }
  ],
  "argocd": {
    "fileMatch": ["\\.cd.yaml$"]
  }
}
